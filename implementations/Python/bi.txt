
 <-top

joy? 
 <-top

joy? 
[base 2147483648] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] [build-two-list-combiner _btlc0 _btlc1 [i cons]] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] [build-two-list-combiner _btlc0 _btlc1 [i cons]] [_btlc0.0 [[ditch-empty-list] swoncat] dip] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] [build-two-list-combiner _btlc0 _btlc1 [i cons]] [_btlc0.0 [[ditch-empty-list] swoncat] dip] [_btlc0.1 [pop] swoncat] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] [build-two-list-combiner _btlc0 _btlc1 [i cons]] [_btlc0.0 [[ditch-empty-list] swoncat] dip] [_btlc0.1 [pop] swoncat] [_btlc0.3 [_btlc0.0 _btlc0.1] dip] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] [build-two-list-combiner _btlc0 _btlc1 [i cons]] [_btlc0.0 [[ditch-empty-list] swoncat] dip] [_btlc0.1 [pop] swoncat] [_btlc0.3 [_btlc0.0 _btlc0.1] dip] [_btlc0.4 [uncons-two] [dipd] sandwich] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] [build-two-list-combiner _btlc0 _btlc1 [i cons]] [_btlc0.0 [[ditch-empty-list] swoncat] dip] [_btlc0.1 [pop] swoncat] [_btlc0.3 [_btlc0.0 _btlc0.1] dip] [_btlc0.4 [uncons-two] [dipd] sandwich] [_btlc0 _btlc0.3 _btlc0.4] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] [build-two-list-combiner _btlc0 _btlc1 [i cons]] [_btlc0.0 [[ditch-empty-list] swoncat] dip] [_btlc0.1 [pop] swoncat] [_btlc0.3 [_btlc0.0 _btlc0.1] dip] [_btlc0.4 [uncons-two] [dipd] sandwich] [_btlc0 _btlc0.3 _btlc0.4] [_btlc1 [[ifte] ccons [P'] swons [P] swap] dip] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] [build-two-list-combiner _btlc0 _btlc1 [i cons]] [_btlc0.0 [[ditch-empty-list] swoncat] dip] [_btlc0.1 [pop] swoncat] [_btlc0.3 [_btlc0.0 _btlc0.1] dip] [_btlc0.4 [uncons-two] [dipd] sandwich] [_btlc0 _btlc0.3 _btlc0.4] [_btlc1 [[ifte] ccons [P'] swons [P] swap] dip] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] [build-two-list-combiner _btlc0 _btlc1 [i cons]] [_btlc0.0 [[ditch-empty-list] swoncat] dip] [_btlc0.1 [pop] swoncat] [_btlc0.3 [_btlc0.0 _btlc0.1] dip] [_btlc0.4 [uncons-two] [dipd] sandwich] [_btlc0 _btlc0.3 _btlc0.4] [_btlc1 [[ifte] ccons [P'] swons [P] swap] dip] [carry [] [1 swons] branch] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] [build-two-list-combiner _btlc0 _btlc1 [i cons]] [_btlc0.0 [[ditch-empty-list] swoncat] dip] [_btlc0.1 [pop] swoncat] [_btlc0.3 [_btlc0.0 _btlc0.1] dip] [_btlc0.4 [uncons-two] [dipd] sandwich] [_btlc0 _btlc0.3 _btlc0.4] [_btlc1 [[ifte] ccons [P'] swons [P] swap] dip] [carry [] [1 swons] branch] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] [build-two-list-combiner _btlc0 _btlc1 [i cons]] [_btlc0.0 [[ditch-empty-list] swoncat] dip] [_btlc0.1 [pop] swoncat] [_btlc0.3 [_btlc0.0 _btlc0.1] dip] [_btlc0.4 [uncons-two] [dipd] sandwich] [_btlc0 _btlc0.3 _btlc0.4] [_btlc1 [[ifte] ccons [P'] swons [P] swap] dip] [carry [] [1 swons] branch] [compare-pairs [bool not] [pop false] [[first [>=] infrst] [pop true]] [[rest] swoncat ifte] genrec] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] [build-two-list-combiner _btlc0 _btlc1 [i cons]] [_btlc0.0 [[ditch-empty-list] swoncat] dip] [_btlc0.1 [pop] swoncat] [_btlc0.3 [_btlc0.0 _btlc0.1] dip] [_btlc0.4 [uncons-two] [dipd] sandwich] [_btlc0 _btlc0.3 _btlc0.4] [_btlc1 [[ifte] ccons [P'] swons [P] swap] dip] [carry [] [1 swons] branch] [compare-pairs [bool not] [pop false] [[first [>=] infrst] [pop true]] [[rest] swoncat ifte] genrec] [xR1 uncons-two [unit cons swons] dipd] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] [build-two-list-combiner _btlc0 _btlc1 [i cons]] [_btlc0.0 [[ditch-empty-list] swoncat] dip] [_btlc0.1 [pop] swoncat] [_btlc0.3 [_btlc0.0 _btlc0.1] dip] [_btlc0.4 [uncons-two] [dipd] sandwich] [_btlc0 _btlc0.3 _btlc0.4] [_btlc1 [[ifte] ccons [P'] swons [P] swap] dip] [carry [] [1 swons] branch] [compare-pairs [bool not] [pop false] [[first [>=] infrst] [pop true]] [[rest] swoncat ifte] genrec] [xR1 uncons-two [unit cons swons] dipd] [xP [bool] ii & not] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] [build-two-list-combiner _btlc0 _btlc1 [i cons]] [_btlc0.0 [[ditch-empty-list] swoncat] dip] [_btlc0.1 [pop] swoncat] [_btlc0.3 [_btlc0.0 _btlc0.1] dip] [_btlc0.4 [uncons-two] [dipd] sandwich] [_btlc0 _btlc0.3 _btlc0.4] [_btlc1 [[ifte] ccons [P'] swons [P] swap] dip] [carry [] [1 swons] branch] [compare-pairs [bool not] [pop false] [[first [>=] infrst] [pop true]] [[rest] swoncat ifte] genrec] [xR1 uncons-two [unit cons swons] dipd] [xP [bool] ii & not] [BASE [bool] [popop pop true] [[pop bool] [popop pop false] [popop compare-pairs] ifte] ifte] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] [build-two-list-combiner _btlc0 _btlc1 [i cons]] [_btlc0.0 [[ditch-empty-list] swoncat] dip] [_btlc0.1 [pop] swoncat] [_btlc0.3 [_btlc0.0 _btlc0.1] dip] [_btlc0.4 [uncons-two] [dipd] sandwich] [_btlc0 _btlc0.3 _btlc0.4] [_btlc1 [[ifte] ccons [P'] swons [P] swap] dip] [carry [] [1 swons] branch] [compare-pairs [bool not] [pop false] [[first [>=] infrst] [pop true]] [[rest] swoncat ifte] genrec] [xR1 uncons-two [unit cons swons] dipd] [xP [bool] ii & not] [BASE [bool] [popop pop true] [[pop bool] [popop pop false] [popop compare-pairs] ifte] ifte] [gt-bigint <<{} [xP] [BASE] [xR1] tailrec] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] [build-two-list-combiner _btlc0 _btlc1 [i cons]] [_btlc0.0 [[ditch-empty-list] swoncat] dip] [_btlc0.1 [pop] swoncat] [_btlc0.3 [_btlc0.0 _btlc0.1] dip] [_btlc0.4 [uncons-two] [dipd] sandwich] [_btlc0 _btlc0.3 _btlc0.4] [_btlc1 [[ifte] ccons [P'] swons [P] swap] dip] [carry [] [1 swons] branch] [compare-pairs [bool not] [pop false] [[first [>=] infrst] [pop true]] [[rest] swoncat ifte] genrec] [xR1 uncons-two [unit cons swons] dipd] [xP [bool] ii & not] [BASE [bool] [popop pop true] [[pop bool] [popop pop false] [popop compare-pairs] ifte] ifte] [gt-bigint <<{} [xP] [BASE] [xR1] tailrec] [check-gt [gt-bigint] [swap [not] dipd] [] ifte] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] [build-two-list-combiner _btlc0 _btlc1 [i cons]] [_btlc0.0 [[ditch-empty-list] swoncat] dip] [_btlc0.1 [pop] swoncat] [_btlc0.3 [_btlc0.0 _btlc0.1] dip] [_btlc0.4 [uncons-two] [dipd] sandwich] [_btlc0 _btlc0.3 _btlc0.4] [_btlc1 [[ifte] ccons [P'] swons [P] swap] dip] [carry [] [1 swons] branch] [compare-pairs [bool not] [pop false] [[first [>=] infrst] [pop true]] [[rest] swoncat ifte] genrec] [xR1 uncons-two [unit cons swons] dipd] [xP [bool] ii & not] [BASE [bool] [popop pop true] [[pop bool] [popop pop false] [popop compare-pairs] ifte] ifte] [gt-bigint <<{} [xP] [BASE] [xR1] tailrec] [check-gt [gt-bigint] [swap [not] dipd] [] ifte] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] [build-two-list-combiner _btlc0 _btlc1 [i cons]] [_btlc0.0 [[ditch-empty-list] swoncat] dip] [_btlc0.1 [pop] swoncat] [_btlc0.3 [_btlc0.0 _btlc0.1] dip] [_btlc0.4 [uncons-two] [dipd] sandwich] [_btlc0 _btlc0.3 _btlc0.4] [_btlc1 [[ifte] ccons [P'] swons [P] swap] dip] [carry [] [1 swons] branch] [compare-pairs [bool not] [pop false] [[first [>=] infrst] [pop true]] [[rest] swoncat ifte] genrec] [xR1 uncons-two [unit cons swons] dipd] [xP [bool] ii & not] [BASE [bool] [popop pop true] [[pop bool] [popop pop false] [popop compare-pairs] ifte] ifte] [gt-bigint <<{} [xP] [BASE] [xR1] tailrec] [check-gt [gt-bigint] [swap [not] dipd] [] ifte] [sub-carry-from-digits popd] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] [build-two-list-combiner _btlc0 _btlc1 [i cons]] [_btlc0.0 [[ditch-empty-list] swoncat] dip] [_btlc0.1 [pop] swoncat] [_btlc0.3 [_btlc0.0 _btlc0.1] dip] [_btlc0.4 [uncons-two] [dipd] sandwich] [_btlc0 _btlc0.3 _btlc0.4] [_btlc1 [[ifte] ccons [P'] swons [P] swap] dip] [carry [] [1 swons] branch] [compare-pairs [bool not] [pop false] [[first [>=] infrst] [pop true]] [[rest] swoncat ifte] genrec] [xR1 uncons-two [unit cons swons] dipd] [xP [bool] ii & not] [BASE [bool] [popop pop true] [[pop bool] [popop pop false] [popop compare-pairs] ifte] ifte] [gt-bigint <<{} [xP] [BASE] [xR1] tailrec] [check-gt [gt-bigint] [swap [not] dipd] [] ifte] [sub-carry-from-digits popd] [_sub-with-carry0 rolldown bool-to-int [-] ii] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] [build-two-list-combiner _btlc0 _btlc1 [i cons]] [_btlc0.0 [[ditch-empty-list] swoncat] dip] [_btlc0.1 [pop] swoncat] [_btlc0.3 [_btlc0.0 _btlc0.1] dip] [_btlc0.4 [uncons-two] [dipd] sandwich] [_btlc0 _btlc0.3 _btlc0.4] [_btlc1 [[ifte] ccons [P'] swons [P] swap] dip] [carry [] [1 swons] branch] [compare-pairs [bool not] [pop false] [[first [>=] infrst] [pop true]] [[rest] swoncat ifte] genrec] [xR1 uncons-two [unit cons swons] dipd] [xP [bool] ii & not] [BASE [bool] [popop pop true] [[pop bool] [popop pop false] [popop compare-pairs] ifte] ifte] [gt-bigint <<{} [xP] [BASE] [xR1] tailrec] [check-gt [gt-bigint] [swap [not] dipd] [] ifte] [sub-carry-from-digits popd] [_sub-with-carry0 rolldown bool-to-int [-] ii] [_sub-with-carry1 [base + base mod] [0 <] cleave] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] [build-two-list-combiner _btlc0 _btlc1 [i cons]] [_btlc0.0 [[ditch-empty-list] swoncat] dip] [_btlc0.1 [pop] swoncat] [_btlc0.3 [_btlc0.0 _btlc0.1] dip] [_btlc0.4 [uncons-two] [dipd] sandwich] [_btlc0 _btlc0.3 _btlc0.4] [_btlc1 [[ifte] ccons [P'] swons [P] swap] dip] [carry [] [1 swons] branch] [compare-pairs [bool not] [pop false] [[first [>=] infrst] [pop true]] [[rest] swoncat ifte] genrec] [xR1 uncons-two [unit cons swons] dipd] [xP [bool] ii & not] [BASE [bool] [popop pop true] [[pop bool] [popop pop false] [popop compare-pairs] ifte] ifte] [gt-bigint <<{} [xP] [BASE] [xR1] tailrec] [check-gt [gt-bigint] [swap [not] dipd] [] ifte] [sub-carry-from-digits popd] [_sub-with-carry0 rolldown bool-to-int [-] ii] [_sub-with-carry1 [base + base mod] [0 <] cleave] [sub-with-carry _sub-with-carry0 _sub-with-carry1] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] [build-two-list-combiner _btlc0 _btlc1 [i cons]] [_btlc0.0 [[ditch-empty-list] swoncat] dip] [_btlc0.1 [pop] swoncat] [_btlc0.3 [_btlc0.0 _btlc0.1] dip] [_btlc0.4 [uncons-two] [dipd] sandwich] [_btlc0 _btlc0.3 _btlc0.4] [_btlc1 [[ifte] ccons [P'] swons [P] swap] dip] [carry [] [1 swons] branch] [compare-pairs [bool not] [pop false] [[first [>=] infrst] [pop true]] [[rest] swoncat ifte] genrec] [xR1 uncons-two [unit cons swons] dipd] [xP [bool] ii & not] [BASE [bool] [popop pop true] [[pop bool] [popop pop false] [popop compare-pairs] ifte] ifte] [gt-bigint <<{} [xP] [BASE] [xR1] tailrec] [check-gt [gt-bigint] [swap [not] dipd] [] ifte] [sub-carry-from-digits popd] [_sub-with-carry0 rolldown bool-to-int [-] ii] [_sub-with-carry1 [base + base mod] [0 <] cleave] [sub-with-carry _sub-with-carry0 _sub-with-carry1] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] [build-two-list-combiner _btlc0 _btlc1 [i cons]] [_btlc0.0 [[ditch-empty-list] swoncat] dip] [_btlc0.1 [pop] swoncat] [_btlc0.3 [_btlc0.0 _btlc0.1] dip] [_btlc0.4 [uncons-two] [dipd] sandwich] [_btlc0 _btlc0.3 _btlc0.4] [_btlc1 [[ifte] ccons [P'] swons [P] swap] dip] [carry [] [1 swons] branch] [compare-pairs [bool not] [pop false] [[first [>=] infrst] [pop true]] [[rest] swoncat ifte] genrec] [xR1 uncons-two [unit cons swons] dipd] [xP [bool] ii & not] [BASE [bool] [popop pop true] [[pop bool] [popop pop false] [popop compare-pairs] ifte] ifte] [gt-bigint <<{} [xP] [BASE] [xR1] tailrec] [check-gt [gt-bigint] [swap [not] dipd] [] ifte] [sub-carry-from-digits popd] [_sub-with-carry0 rolldown bool-to-int [-] ii] [_sub-with-carry1 [base + base mod] [0 <] cleave] [sub-with-carry _sub-with-carry0 _sub-with-carry1] [sub-like-bigints [uncons] dip rest check-gt sub-digits cons] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] [build-two-list-combiner _btlc0 _btlc1 [i cons]] [_btlc0.0 [[ditch-empty-list] swoncat] dip] [_btlc0.1 [pop] swoncat] [_btlc0.3 [_btlc0.0 _btlc0.1] dip] [_btlc0.4 [uncons-two] [dipd] sandwich] [_btlc0 _btlc0.3 _btlc0.4] [_btlc1 [[ifte] ccons [P'] swons [P] swap] dip] [carry [] [1 swons] branch] [compare-pairs [bool not] [pop false] [[first [>=] infrst] [pop true]] [[rest] swoncat ifte] genrec] [xR1 uncons-two [unit cons swons] dipd] [xP [bool] ii & not] [BASE [bool] [popop pop true] [[pop bool] [popop pop false] [popop compare-pairs] ifte] ifte] [gt-bigint <<{} [xP] [BASE] [xR1] tailrec] [check-gt [gt-bigint] [swap [not] dipd] [] ifte] [sub-carry-from-digits popd] [_sub-with-carry0 rolldown bool-to-int [-] ii] [_sub-with-carry1 [base + base mod] [0 <] cleave] [sub-with-carry _sub-with-carry0 _sub-with-carry1] [sub-like-bigints [uncons] dip rest check-gt sub-digits cons] [sub-digits initial-carry sub-digits'] <-top

joy? 
[base 2147483648] [ditch-empty-list [bool] [popd] [pop] ifte] [bool-to-int [0] [1] branch] [uncons-two [uncons] ii swapd] [sandwich swap [cons] dip swoncat] [digitalize [0 <=] [pop []] [base divmod swap] [i cons] genrec] [to-bigint [!-] [abs digitalize] cleave cons] [prep rest 1 0 rolldown] [from-bigint' [next-digit] step popd] [next-digit [increase-power] [accumulate-digit] clop popdd] [increase-power popop base *] [accumulate-digit rolldown * +] [sign-int [first] [prep from-bigint'] cleave] [neg-if-necessary swap [neg] [] branch] [from-bigint sign-int neg-if-necessary] [add-with-carry _add-with-carry0 _add-with-carry1] [_add-with-carry0 [bool-to-int] dipd + +] [_add-with-carry1 base [mod] [>=] clop] [add-carry-to-digits [pop not] [popd] [_actd_R0] [i cons] genrec] [_actd_R0 [bool] [_actd_R0.then] [_actd_R0.else] ifte] [_actd_R0.else popd 1 false rolldown] [_actd_R0.then 0 swap uncons [add-with-carry] dip] [add-digits initial-carry add-digits'] [initial-carry false rollup] [add-digits' [P] [THEN] [R0] [R1] genrec] [P [bool] ii & not] [THEN [P'] [THEN'] [ELSE] ifte] [R0 uncons-two [add-with-carry] dipd] [R1 i cons] [P' [bool] ii |] [THEN' ditch-empty-list add-carry-to-digits] [ELSE pop swap [] [1 swons] branch] [same-sign [first] ii xor not] [add-like-bigints [uncons] dip rest add-digits cons] [add-bigints [same-sign] [add-like-bigints] [1 0 /] ifte] [build-two-list-combiner _btlc0 _btlc1 [i cons]] [_btlc0.0 [[ditch-empty-list] swoncat] dip] [_btlc0.1 [pop] swoncat] [_btlc0.3 [_btlc0.0 _btlc0.1] dip] [_btlc0.4 [uncons-two] [dipd] sandwich] [_btlc0 _btlc0.3 _btlc0.4] [_btlc1 [[ifte] ccons [P'] swons [P] swap] dip] [carry [] [1 swons] branch] [compare-pairs [bool not] [pop false] [[first [>=] infrst] [pop true]] [[rest] swoncat ifte] genrec] [xR1 uncons-two [unit cons swons] dipd] [xP [bool] ii & not] [BASE [bool] [popop pop true] [[pop bool] [popop pop false] [popop compare-pairs] ifte] ifte] [gt-bigint <<{} [xP] [BASE] [xR1] tailrec] [check-gt [gt-bigint] [swap [not] dipd] [] ifte] [sub-carry-from-digits popd] [_sub-with-carry0 rolldown bool-to-int [-] ii] [_sub-with-carry1 [base + base mod] [0 <] cleave] [sub-with-carry _sub-with-carry0 _sub-with-carry1] [sub-like-bigints [uncons] dip rest check-gt sub-digits cons] [sub-digits initial-carry sub-digits'] <-top

joy? 
 <-top

joy? 
 <-top

joy? 
[add-carry-to-digits] <-top

joy? 
[add-carry-to-digits] [swap carry] <-top

joy? 
[add-carry-to-digits] [swap carry] [add-with-carry] <-top

joy? 
[P] [[P'] [ditch-empty-list add-carry-to-digits] [pop swap carry] ifte] [uncons-two [add-with-carry] dipd] [i cons] <-top

joy? 
[[P] [[P'] [ditch-empty-list add-carry-to-digits] [pop swap carry] ifte] [uncons-two [add-with-carry] dipd] [i cons] genrec] <-top

joy? 
[add-digits' [P] [[P'] [ditch-empty-list add-carry-to-digits] [pop swap carry] ifte] [uncons-two [add-with-carry] dipd] [i cons] genrec] <-top

joy? 
 <-top

joy? 
 <-top

joy? 
[sub-carry-from-digits] <-top

joy? 
[sub-carry-from-digits] [swap sub-carry] <-top

joy? 
[sub-carry-from-digits] [swap sub-carry] [sub-with-carry] <-top

joy? 
[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] <-top

joy? 
[[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] <-top

joy? 
[sub-digits' [P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] <-top

joy? 
 <-top

joy? 
 <-top

joy? 
 <-top

joy? 
[sub-digits initial-carry sub-digits'] <-top

joy? 
[sub-digits initial-carry sub-digits'] <-top

joy? 
[sub-digits initial-carry sub-digits'] <-top

joy?                                                                                                                                                                                                                                                                                                                                  [sub-digits initial-carry sub-digits'] true [456] [123] • sub-digits
                                                                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true [456] [123] • initial-carry sub-digits'
                                                                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true [456] [123] • false rollup sub-digits'
                                                                                                                                                                                                                                                                                                                           [sub-digits initial-carry sub-digits'] true [456] [123] false • rollup sub-digits'
                                                                                                                                                                                                                                                                                                                           [sub-digits initial-carry sub-digits'] true false [456] [123] • sub-digits'
                                                                                                                                                                                                                                                                                                                           [sub-digits initial-carry sub-digits'] true false [456] [123] • [P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec
                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true false [456] [123] [P] • [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec
                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true false [456] [123] [P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] • [uncons-two [sub-with-carry] dipd] [i cons] genrec
                                                                                                                                                                                                          [sub-digits initial-carry sub-digits'] true false [456] [123] [P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] • [i cons] genrec
                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true false [456] [123] [P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] • genrec
                                                                [sub-digits initial-carry sub-digits'] true false [456] [123] [P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] • ifte
[sub-digits initial-carry sub-digits'] true false [456] [123] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [[123] [456] false true [sub-digits initial-carry sub-digits']] [P] • infra first choice i
                                                                                                                                                                                                                                                                                                                           [sub-digits initial-carry sub-digits'] true false [456] [123] • P [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [123] [456] false true [sub-digits initial-carry sub-digits']] swaack first choice i
                                                                                                                                                                                                                                                                                                                           [sub-digits initial-carry sub-digits'] true false [456] [123] • [bool] ii & not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [123] [456] false true [sub-digits initial-carry sub-digits']] swaack first choice i
                                                                                                                                                                                                                                                                                                                    [sub-digits initial-carry sub-digits'] true false [456] [123] [bool] • ii & not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [123] [456] false true [sub-digits initial-carry sub-digits']] swaack first choice i
                                                                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true false [456] • bool [123] bool & not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [123] [456] false true [sub-digits initial-carry sub-digits']] swaack first choice i
                                                                                                                                                                                                                                                                                                                                  [sub-digits initial-carry sub-digits'] true false true • [123] bool & not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [123] [456] false true [sub-digits initial-carry sub-digits']] swaack first choice i
                                                                                                                                                                                                                                                                                                                            [sub-digits initial-carry sub-digits'] true false true [123] • bool & not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [123] [456] false true [sub-digits initial-carry sub-digits']] swaack first choice i
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true false true true • & not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [123] [456] false true [sub-digits initial-carry sub-digits']] swaack first choice i
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true false true true • and not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [123] [456] false true [sub-digits initial-carry sub-digits']] swaack first choice i
                                                                                                                                                                                                                                                                                                                                  [sub-digits initial-carry sub-digits'] true false true • not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [123] [456] false true [sub-digits initial-carry sub-digits']] swaack first choice i
                                                                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true false false • [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [123] [456] false true [sub-digits initial-carry sub-digits']] swaack first choice i
          [sub-digits initial-carry sub-digits'] true false false [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [123] [456] false true [sub-digits initial-carry sub-digits']] • swaack first choice i
          [sub-digits initial-carry sub-digits'] true false [456] [123] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [false false true [sub-digits initial-carry sub-digits']] • first choice i
                                                              [sub-digits initial-carry sub-digits'] true false [456] [123] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] false • choice i
                                                                                                                                              [sub-digits initial-carry sub-digits'] true false [456] [123] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] • i
                                                                                                                                                                                                                                                                                                                           [sub-digits initial-carry sub-digits'] true false [456] [123] • uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                           [sub-digits initial-carry sub-digits'] true false [456] [123] • [uncons] ii swapd [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                  [sub-digits initial-carry sub-digits'] true false [456] [123] [uncons] • ii swapd [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true false [456] • uncons [123] uncons swapd [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                [sub-digits initial-carry sub-digits'] true false 456 [] • [123] uncons swapd [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                          [sub-digits initial-carry sub-digits'] true false 456 [] [123] • uncons swapd [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true false 456 [] 123 [] • swapd [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true false 456 [] 123 [] • [swap] dip [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                  [sub-digits initial-carry sub-digits'] true false 456 [] 123 [] [swap] • dip [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                            [sub-digits initial-carry sub-digits'] true false 456 [] 123 • swap [] [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                            [sub-digits initial-carry sub-digits'] true false 456 123 [] • [] [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true false 456 123 [] [] • [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                        [sub-digits initial-carry sub-digits'] true false 456 123 [] [] [sub-with-carry] • dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                               [sub-digits initial-carry sub-digits'] true false 456 123 • sub-with-carry [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                               [sub-digits initial-carry sub-digits'] true false 456 123 • _sub-with-carry0 _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                               [sub-digits initial-carry sub-digits'] true false 456 123 • rolldown bool-to-int [-] ii _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                               [sub-digits initial-carry sub-digits'] true 456 123 false • bool-to-int [-] ii _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                               [sub-digits initial-carry sub-digits'] true 456 123 false • [0] [1] branch [-] ii _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                           [sub-digits initial-carry sub-digits'] true 456 123 false [0] • [1] branch [-] ii _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 456 123 false [0] [1] • branch [-] ii _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                     [sub-digits initial-carry sub-digits'] true 456 123 • 0 [-] ii _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                   [sub-digits initial-carry sub-digits'] true 456 123 0 • [-] ii _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                               [sub-digits initial-carry sub-digits'] true 456 123 0 [-] • ii _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                     [sub-digits initial-carry sub-digits'] true 456 123 • - 0 - _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                     [sub-digits initial-carry sub-digits'] true 456 123 • sub 0 - _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true 333 • 0 - _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 0 • - _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 0 • sub _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true 333 • _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true 333 • [base + base mod] [0 <] cleave [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 [base + base mod] • [0 <] cleave [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true 333 [base + base mod] [0 <] • cleave [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true 333 [base + base mod] [0 <] • fork popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true 333 [base + base mod] [0 <] • [i] app2 popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 [base + base mod] [0 <] [i] • app2 popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 [base + base mod] [0 <] [i] • [grba swap grba swap] dip [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 [base + base mod] [0 <] [i] [grba swap grba swap] • dip [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true 333 [base + base mod] [0 <] • grba swap grba swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true 333 [base + base mod] [0 <] • [stack popd] dip swap grba swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                    [sub-digits initial-carry sub-digits'] true 333 [base + base mod] [0 <] [stack popd] • dip swap grba swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 [base + base mod] • stack popd [0 <] swap grba swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                   [sub-digits initial-carry sub-digits'] true 333 [base + base mod] [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] • popd [0 <] swap grba swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                     [sub-digits initial-carry sub-digits'] true 333 [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] • [0 <] swap grba swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                               [sub-digits initial-carry sub-digits'] true 333 [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] [0 <] • swap grba swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                               [sub-digits initial-carry sub-digits'] true 333 [0 <] [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] • grba swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                               [sub-digits initial-carry sub-digits'] true 333 [0 <] [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] • [stack popd] dip swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                  [sub-digits initial-carry sub-digits'] true 333 [0 <] [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] [stack popd] • dip swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                   [sub-digits initial-carry sub-digits'] true 333 [0 <] • stack popd [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                           [sub-digits initial-carry sub-digits'] true 333 [0 <] [[0 <] 333 true [sub-digits initial-carry sub-digits']] • popd [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true 333 [[0 <] 333 true [sub-digits initial-carry sub-digits']] • [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 [[0 <] 333 true [sub-digits initial-carry sub-digits']] [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] • swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] [[0 <] 333 true [sub-digits initial-carry sub-digits']] • [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true 333 [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] • [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                [sub-digits initial-carry sub-digits'] true 333 [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] [infrst] • cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                [sub-digits initial-carry sub-digits'] true 333 [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] [[0 <] 333 true [sub-digits initial-carry sub-digits']] [[i] infrst] • ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                     [sub-digits initial-carry sub-digits'] true 333 [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] • [i] infrst [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true 333 [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] [i] • infrst [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true 333 [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] [i] • infra first [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 [base + base mod] • i [333 true [sub-digits initial-carry sub-digits']] swaack first [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true 333 • base + base mod [333 true [sub-digits initial-carry sub-digits']] swaack first [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true 333 • 2147483648 + base mod [333 true [sub-digits initial-carry sub-digits']] swaack first [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                              [sub-digits initial-carry sub-digits'] true 333 2147483648 • + base mod [333 true [sub-digits initial-carry sub-digits']] swaack first [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                              [sub-digits initial-carry sub-digits'] true 333 2147483648 • add base mod [333 true [sub-digits initial-carry sub-digits']] swaack first [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                  [sub-digits initial-carry sub-digits'] true 2147483981 • base mod [333 true [sub-digits initial-carry sub-digits']] swaack first [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                  [sub-digits initial-carry sub-digits'] true 2147483981 • 2147483648 mod [333 true [sub-digits initial-carry sub-digits']] swaack first [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 2147483981 2147483648 • mod [333 true [sub-digits initial-carry sub-digits']] swaack first [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true 333 • [333 true [sub-digits initial-carry sub-digits']] swaack first [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 [333 true [sub-digits initial-carry sub-digits']] • swaack first [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 [333 true [sub-digits initial-carry sub-digits']] • first [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                     [sub-digits initial-carry sub-digits'] true 333 333 • [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 333 [[0 <] 333 true [sub-digits initial-carry sub-digits']] • [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true 333 333 [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] • infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true 333 333 [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] • infra first popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                   [sub-digits initial-carry sub-digits'] true 333 [0 <] • i [333 333 true [sub-digits initial-carry sub-digits']] swaack first popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true 333 • 0 < [333 333 true [sub-digits initial-carry sub-digits']] swaack first popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 0 • < [333 333 true [sub-digits initial-carry sub-digits']] swaack first popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 0 • lt [333 333 true [sub-digits initial-carry sub-digits']] swaack first popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true false • [333 333 true [sub-digits initial-carry sub-digits']] swaack first popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true false [333 333 true [sub-digits initial-carry sub-digits']] • swaack first popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true 333 333 [false true [sub-digits initial-carry sub-digits']] • first popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                               [sub-digits initial-carry sub-digits'] true 333 333 false • popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                   [sub-digits initial-carry sub-digits'] true 333 false • [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                [sub-digits initial-carry sub-digits'] true 333 false [] • [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 false [] [] • [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                          [sub-digits initial-carry sub-digits'] true 333 false [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] • i cons
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 false [] [] • [P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec cons
                                                                                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true 333 false [] [] [P] • [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec cons
                                                                                                                                                                                                                                               [sub-digits initial-carry sub-digits'] true 333 false [] [] [P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] • [uncons-two [sub-with-carry] dipd] [i cons] genrec cons
                                                                                                                                                                                                            [sub-digits initial-carry sub-digits'] true 333 false [] [] [P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] • [i cons] genrec cons
                                                                                                                                                                                                   [sub-digits initial-carry sub-digits'] true 333 false [] [] [P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] • genrec cons
                                                                  [sub-digits initial-carry sub-digits'] true 333 false [] [] [P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] • ifte cons
    [sub-digits initial-carry sub-digits'] true 333 false [] [] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [[] [] false 333 true [sub-digits initial-carry sub-digits']] [P] • infra first choice i cons
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 false [] [] • P [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 false [] [] • [bool] ii & not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                      [sub-digits initial-carry sub-digits'] true 333 false [] [] [bool] • ii & not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                                [sub-digits initial-carry sub-digits'] true 333 false [] • bool [] bool & not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 false false • [] bool & not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                          [sub-digits initial-carry sub-digits'] true 333 false false [] • bool & not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 false false false • & not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 false false false • and not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 false false • not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                              [sub-digits initial-carry sub-digits'] true 333 false true • [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
         [sub-digits initial-carry sub-digits'] true 333 false true [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [] [] false 333 true [sub-digits initial-carry sub-digits']] • swaack first choice i cons
         [sub-digits initial-carry sub-digits'] true 333 false [] [] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [true false 333 true [sub-digits initial-carry sub-digits']] • first choice i cons
                                                                 [sub-digits initial-carry sub-digits'] true 333 false [] [] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] true • choice i cons
                                                                                                                                                                                                                                                   [sub-digits initial-carry sub-digits'] true 333 false [] [] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] • i cons
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 false [] [] • [P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte cons
                                                                                                                                                                                                                                                                                                                        [sub-digits initial-carry sub-digits'] true 333 false [] [] [P'] • [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte cons
                                                                                                                                                                                                                                                                               [sub-digits initial-carry sub-digits'] true 333 false [] [] [P'] [ditch-empty-list sub-carry-from-digits] • [pop swap sub-carry] ifte cons
                                                                                                                                                                                                                                                          [sub-digits initial-carry sub-digits'] true 333 false [] [] [P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] • ifte cons
                                                                                                                                                                                            [sub-digits initial-carry sub-digits'] true 333 false [] [] [pop swap sub-carry] [ditch-empty-list sub-carry-from-digits] [[] [] false 333 true [sub-digits initial-carry sub-digits']] [P'] • infra first choice i cons
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 false [] [] • P' [[ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 false [] [] • [bool] ii | [[ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                      [sub-digits initial-carry sub-digits'] true 333 false [] [] [bool] • ii | [[ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                                [sub-digits initial-carry sub-digits'] true 333 false [] • bool [] bool | [[ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 false false • [] bool | [[ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                          [sub-digits initial-carry sub-digits'] true 333 false false [] • bool | [[ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 false false false • | [[ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 false false false • or [[ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 false false • [[ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true 333 false false [[ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] [] [] false 333 true [sub-digits initial-carry sub-digits']] • swaack first choice i cons
                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true 333 false [] [] [pop swap sub-carry] [ditch-empty-list sub-carry-from-digits] [false false 333 true [sub-digits initial-carry sub-digits']] • first choice i cons
                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true 333 false [] [] [pop swap sub-carry] [ditch-empty-list sub-carry-from-digits] false • choice i cons
                                                                                                                                                                                                                                                                                                        [sub-digits initial-carry sub-digits'] true 333 false [] [] [pop swap sub-carry] • i cons
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 false [] [] • pop swap sub-carry cons
                                                                                                                                                                                                                                                                                                                                [sub-digits initial-carry sub-digits'] true 333 false [] • swap sub-carry cons
                                                                                                                                                                                                                                                                                                                                [sub-digits initial-carry sub-digits'] true 333 [] false • sub-carry cons
                                                                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true [456] [123] • sub-digits
                                                                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true [456] [123] • initial-carry sub-digits'
                                                                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true [456] [123] • false rollup sub-digits'
                                                                                                                                                                                                                                                                                                                           [sub-digits initial-carry sub-digits'] true [456] [123] false • rollup sub-digits'
                                                                                                                                                                                                                                                                                                                           [sub-digits initial-carry sub-digits'] true false [456] [123] • sub-digits'
                                                                                                                                                                                                                                                                                                                           [sub-digits initial-carry sub-digits'] true false [456] [123] • [P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec
                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true false [456] [123] [P] • [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec
                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true false [456] [123] [P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] • [uncons-two [sub-with-carry] dipd] [i cons] genrec
                                                                                                                                                                                                          [sub-digits initial-carry sub-digits'] true false [456] [123] [P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] • [i cons] genrec
                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true false [456] [123] [P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] • genrec
                                                                [sub-digits initial-carry sub-digits'] true false [456] [123] [P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] • ifte
[sub-digits initial-carry sub-digits'] true false [456] [123] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [[123] [456] false true [sub-digits initial-carry sub-digits']] [P] • infra first choice i
                                                                                                                                                                                                                                                                                                                           [sub-digits initial-carry sub-digits'] true false [456] [123] • P [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [123] [456] false true [sub-digits initial-carry sub-digits']] swaack first choice i
                                                                                                                                                                                                                                                                                                                           [sub-digits initial-carry sub-digits'] true false [456] [123] • [bool] ii & not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [123] [456] false true [sub-digits initial-carry sub-digits']] swaack first choice i
                                                                                                                                                                                                                                                                                                                    [sub-digits initial-carry sub-digits'] true false [456] [123] [bool] • ii & not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [123] [456] false true [sub-digits initial-carry sub-digits']] swaack first choice i
                                                                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true false [456] • bool [123] bool & not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [123] [456] false true [sub-digits initial-carry sub-digits']] swaack first choice i
                                                                                                                                                                                                                                                                                                                                  [sub-digits initial-carry sub-digits'] true false true • [123] bool & not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [123] [456] false true [sub-digits initial-carry sub-digits']] swaack first choice i
                                                                                                                                                                                                                                                                                                                            [sub-digits initial-carry sub-digits'] true false true [123] • bool & not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [123] [456] false true [sub-digits initial-carry sub-digits']] swaack first choice i
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true false true true • & not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [123] [456] false true [sub-digits initial-carry sub-digits']] swaack first choice i
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true false true true • and not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [123] [456] false true [sub-digits initial-carry sub-digits']] swaack first choice i
                                                                                                                                                                                                                                                                                                                                  [sub-digits initial-carry sub-digits'] true false true • not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [123] [456] false true [sub-digits initial-carry sub-digits']] swaack first choice i
                                                                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true false false • [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [123] [456] false true [sub-digits initial-carry sub-digits']] swaack first choice i
          [sub-digits initial-carry sub-digits'] true false false [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [123] [456] false true [sub-digits initial-carry sub-digits']] • swaack first choice i
          [sub-digits initial-carry sub-digits'] true false [456] [123] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [false false true [sub-digits initial-carry sub-digits']] • first choice i
                                                              [sub-digits initial-carry sub-digits'] true false [456] [123] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] false • choice i
                                                                                                                                              [sub-digits initial-carry sub-digits'] true false [456] [123] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] • i
                                                                                                                                                                                                                                                                                                                           [sub-digits initial-carry sub-digits'] true false [456] [123] • uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                           [sub-digits initial-carry sub-digits'] true false [456] [123] • [uncons] ii swapd [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                  [sub-digits initial-carry sub-digits'] true false [456] [123] [uncons] • ii swapd [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true false [456] • uncons [123] uncons swapd [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                [sub-digits initial-carry sub-digits'] true false 456 [] • [123] uncons swapd [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                          [sub-digits initial-carry sub-digits'] true false 456 [] [123] • uncons swapd [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true false 456 [] 123 [] • swapd [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true false 456 [] 123 [] • [swap] dip [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                  [sub-digits initial-carry sub-digits'] true false 456 [] 123 [] [swap] • dip [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                            [sub-digits initial-carry sub-digits'] true false 456 [] 123 • swap [] [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                            [sub-digits initial-carry sub-digits'] true false 456 123 [] • [] [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true false 456 123 [] [] • [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                        [sub-digits initial-carry sub-digits'] true false 456 123 [] [] [sub-with-carry] • dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                               [sub-digits initial-carry sub-digits'] true false 456 123 • sub-with-carry [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                               [sub-digits initial-carry sub-digits'] true false 456 123 • _sub-with-carry0 _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                               [sub-digits initial-carry sub-digits'] true false 456 123 • rolldown bool-to-int [-] ii _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                               [sub-digits initial-carry sub-digits'] true 456 123 false • bool-to-int [-] ii _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                               [sub-digits initial-carry sub-digits'] true 456 123 false • [0] [1] branch [-] ii _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                           [sub-digits initial-carry sub-digits'] true 456 123 false [0] • [1] branch [-] ii _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 456 123 false [0] [1] • branch [-] ii _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                     [sub-digits initial-carry sub-digits'] true 456 123 • 0 [-] ii _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                   [sub-digits initial-carry sub-digits'] true 456 123 0 • [-] ii _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                               [sub-digits initial-carry sub-digits'] true 456 123 0 [-] • ii _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                     [sub-digits initial-carry sub-digits'] true 456 123 • - 0 - _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                     [sub-digits initial-carry sub-digits'] true 456 123 • sub 0 - _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true 333 • 0 - _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 0 • - _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 0 • sub _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true 333 • _sub-with-carry1 [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true 333 • [base + base mod] [0 <] cleave [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 [base + base mod] • [0 <] cleave [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true 333 [base + base mod] [0 <] • cleave [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true 333 [base + base mod] [0 <] • fork popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true 333 [base + base mod] [0 <] • [i] app2 popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 [base + base mod] [0 <] [i] • app2 popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 [base + base mod] [0 <] [i] • [grba swap grba swap] dip [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 [base + base mod] [0 <] [i] [grba swap grba swap] • dip [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true 333 [base + base mod] [0 <] • grba swap grba swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true 333 [base + base mod] [0 <] • [stack popd] dip swap grba swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                    [sub-digits initial-carry sub-digits'] true 333 [base + base mod] [0 <] [stack popd] • dip swap grba swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 [base + base mod] • stack popd [0 <] swap grba swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                   [sub-digits initial-carry sub-digits'] true 333 [base + base mod] [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] • popd [0 <] swap grba swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                     [sub-digits initial-carry sub-digits'] true 333 [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] • [0 <] swap grba swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                               [sub-digits initial-carry sub-digits'] true 333 [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] [0 <] • swap grba swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                               [sub-digits initial-carry sub-digits'] true 333 [0 <] [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] • grba swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                               [sub-digits initial-carry sub-digits'] true 333 [0 <] [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] • [stack popd] dip swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                  [sub-digits initial-carry sub-digits'] true 333 [0 <] [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] [stack popd] • dip swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                   [sub-digits initial-carry sub-digits'] true 333 [0 <] • stack popd [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                           [sub-digits initial-carry sub-digits'] true 333 [0 <] [[0 <] 333 true [sub-digits initial-carry sub-digits']] • popd [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true 333 [[0 <] 333 true [sub-digits initial-carry sub-digits']] • [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 [[0 <] 333 true [sub-digits initial-carry sub-digits']] [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] • swap [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] [[0 <] 333 true [sub-digits initial-carry sub-digits']] • [i] [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true 333 [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] • [infrst] cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                [sub-digits initial-carry sub-digits'] true 333 [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] [infrst] • cons ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                [sub-digits initial-carry sub-digits'] true 333 [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] [[0 <] 333 true [sub-digits initial-carry sub-digits']] [[i] infrst] • ii popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                     [sub-digits initial-carry sub-digits'] true 333 [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] • [i] infrst [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true 333 [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] [i] • infrst [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true 333 [[base + base mod] 333 true [sub-digits initial-carry sub-digits']] [i] • infra first [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 [base + base mod] • i [333 true [sub-digits initial-carry sub-digits']] swaack first [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true 333 • base + base mod [333 true [sub-digits initial-carry sub-digits']] swaack first [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true 333 • 2147483648 + base mod [333 true [sub-digits initial-carry sub-digits']] swaack first [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                              [sub-digits initial-carry sub-digits'] true 333 2147483648 • + base mod [333 true [sub-digits initial-carry sub-digits']] swaack first [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                              [sub-digits initial-carry sub-digits'] true 333 2147483648 • add base mod [333 true [sub-digits initial-carry sub-digits']] swaack first [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                  [sub-digits initial-carry sub-digits'] true 2147483981 • base mod [333 true [sub-digits initial-carry sub-digits']] swaack first [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                  [sub-digits initial-carry sub-digits'] true 2147483981 • 2147483648 mod [333 true [sub-digits initial-carry sub-digits']] swaack first [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 2147483981 2147483648 • mod [333 true [sub-digits initial-carry sub-digits']] swaack first [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true 333 • [333 true [sub-digits initial-carry sub-digits']] swaack first [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 [333 true [sub-digits initial-carry sub-digits']] • swaack first [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 [333 true [sub-digits initial-carry sub-digits']] • first [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                     [sub-digits initial-carry sub-digits'] true 333 333 • [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 333 [[0 <] 333 true [sub-digits initial-carry sub-digits']] • [i] infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true 333 333 [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] • infrst popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true 333 333 [[0 <] 333 true [sub-digits initial-carry sub-digits']] [i] • infra first popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                   [sub-digits initial-carry sub-digits'] true 333 [0 <] • i [333 333 true [sub-digits initial-carry sub-digits']] swaack first popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true 333 • 0 < [333 333 true [sub-digits initial-carry sub-digits']] swaack first popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 0 • < [333 333 true [sub-digits initial-carry sub-digits']] swaack first popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 0 • lt [333 333 true [sub-digits initial-carry sub-digits']] swaack first popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true false • [333 333 true [sub-digits initial-carry sub-digits']] swaack first popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true false [333 333 true [sub-digits initial-carry sub-digits']] • swaack first popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true 333 333 [false true [sub-digits initial-carry sub-digits']] • first popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                               [sub-digits initial-carry sub-digits'] true 333 333 false • popdd [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                   [sub-digits initial-carry sub-digits'] true 333 false • [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                                [sub-digits initial-carry sub-digits'] true 333 false [] • [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 false [] [] • [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons
                                                                                                                                                                                          [sub-digits initial-carry sub-digits'] true 333 false [] [] [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] • i cons
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 false [] [] • [P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec cons
                                                                                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true 333 false [] [] [P] • [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec cons
                                                                                                                                                                                                                                               [sub-digits initial-carry sub-digits'] true 333 false [] [] [P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] • [uncons-two [sub-with-carry] dipd] [i cons] genrec cons
                                                                                                                                                                                                            [sub-digits initial-carry sub-digits'] true 333 false [] [] [P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] • [i cons] genrec cons
                                                                                                                                                                                                   [sub-digits initial-carry sub-digits'] true 333 false [] [] [P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] • genrec cons
                                                                  [sub-digits initial-carry sub-digits'] true 333 false [] [] [P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] • ifte cons
    [sub-digits initial-carry sub-digits'] true 333 false [] [] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [[] [] false 333 true [sub-digits initial-carry sub-digits']] [P] • infra first choice i cons
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 false [] [] • P [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 false [] [] • [bool] ii & not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                      [sub-digits initial-carry sub-digits'] true 333 false [] [] [bool] • ii & not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                                [sub-digits initial-carry sub-digits'] true 333 false [] • bool [] bool & not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 false false • [] bool & not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                          [sub-digits initial-carry sub-digits'] true 333 false false [] • bool & not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 false false false • & not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 false false false • and not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 false false • not [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                              [sub-digits initial-carry sub-digits'] true 333 false true • [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
         [sub-digits initial-carry sub-digits'] true 333 false true [[[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [] [] false 333 true [sub-digits initial-carry sub-digits']] • swaack first choice i cons
         [sub-digits initial-carry sub-digits'] true 333 false [] [] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [true false 333 true [sub-digits initial-carry sub-digits']] • first choice i cons
                                                                 [sub-digits initial-carry sub-digits'] true 333 false [] [] [uncons-two [sub-with-carry] dipd [[P] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] [uncons-two [sub-with-carry] dipd] [i cons] genrec] i cons] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] true • choice i cons
                                                                                                                                                                                                                                                   [sub-digits initial-carry sub-digits'] true 333 false [] [] [[P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte] • i cons
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 false [] [] • [P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte cons
                                                                                                                                                                                                                                                                                                                        [sub-digits initial-carry sub-digits'] true 333 false [] [] [P'] • [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] ifte cons
                                                                                                                                                                                                                                                                               [sub-digits initial-carry sub-digits'] true 333 false [] [] [P'] [ditch-empty-list sub-carry-from-digits] • [pop swap sub-carry] ifte cons
                                                                                                                                                                                                                                                          [sub-digits initial-carry sub-digits'] true 333 false [] [] [P'] [ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] • ifte cons
                                                                                                                                                                                            [sub-digits initial-carry sub-digits'] true 333 false [] [] [pop swap sub-carry] [ditch-empty-list sub-carry-from-digits] [[] [] false 333 true [sub-digits initial-carry sub-digits']] [P'] • infra first choice i cons
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 false [] [] • P' [[ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 false [] [] • [bool] ii | [[ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                      [sub-digits initial-carry sub-digits'] true 333 false [] [] [bool] • ii | [[ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                                [sub-digits initial-carry sub-digits'] true 333 false [] • bool [] bool | [[ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 false false • [] bool | [[ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                          [sub-digits initial-carry sub-digits'] true 333 false false [] • bool | [[ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 false false false • | [[ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                       [sub-digits initial-carry sub-digits'] true 333 false false false • or [[ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 false false • [[ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] [] [] false 333 true [sub-digits initial-carry sub-digits']] swaack first choice i cons
                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true 333 false false [[ditch-empty-list sub-carry-from-digits] [pop swap sub-carry] [] [] false 333 true [sub-digits initial-carry sub-digits']] • swaack first choice i cons
                                                                                                                                                                                                 [sub-digits initial-carry sub-digits'] true 333 false [] [] [pop swap sub-carry] [ditch-empty-list sub-carry-from-digits] [false false 333 true [sub-digits initial-carry sub-digits']] • first choice i cons
                                                                                                                                                                                                                                                         [sub-digits initial-carry sub-digits'] true 333 false [] [] [pop swap sub-carry] [ditch-empty-list sub-carry-from-digits] false • choice i cons
                                                                                                                                                                                                                                                                                                        [sub-digits initial-carry sub-digits'] true 333 false [] [] [pop swap sub-carry] • i cons
                                                                                                                                                                                                                                                                                                                             [sub-digits initial-carry sub-digits'] true 333 false [] [] • pop swap sub-carry cons
                                                                                                                                                                                                                                                                                                                                [sub-digits initial-carry sub-digits'] true 333 false [] • swap sub-carry cons
                                                                                                                                                                                                                                                                                                                                [sub-digits initial-carry sub-digits'] true 333 [] false • sub-carry cons

[sub-digits initial-carry sub-digits'] <-top

joy? 
[sub-digits initial-carry sub-digits'] •
